@using ArtCircler.Models.Extensions
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title Art-Circler</title>
    <link href='https://fonts.googleapis.com/css?family=Josefin+Sans:400,700|Lato' rel='stylesheet' type='text/css'>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="jumbotron">
        <h1 class="text-center">
            ArtCircler<small class="smallText">Subtext for header</small>
        </h1>

       </div>
    <div class="navbar navbar-inverse">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("ArtCircler", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @if (User.Identity.IsArtist().Equals("True"))
                    {
                        <li>@Html.ActionLink("Add Event", "Create", "Events")</li>
                        <li>@Html.ActionLink("Profile", "Profile", "Manage")</li>

                    }
                 </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year Art-Circler</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script type="text/x-template" id="notifications-template">
        <ul class="notifications">
            <%
            _.each(notifications, function(notification){
            if (notification.type == 1) { %>
            <li><span class="highlight"><%= notification.event.artist.name %></span> has canceled the event at <%= notification.event.venue %> at <%= notification.event.dateTime %>.</li>
            <% }
            else if (notification.type == 2) {
            var changes = [],
            originalValues = [],
            newValues = [];

            if (notification.originalVenue != notification.event.venue){
            changes.push('venue');
            originalValues.push(notification.originalVenue);
            newValues.push(notification.event.venue);
            }

            if (notification.originalDateTime != notification.event.dateTime) {
            changes.push('date/time');
            originalValues.push(notification.originalDateTime);
            newValues.push(notification.event.dateTime);
            }
            %>
            <li><span class="highlight"><%= notification.event.artist.name %></span> has changed the <%= changes.join(' and ') %> of the event from <%= originalValues.join('/') %> to <%= newValues.join('/') %></li>
            <%
            }
            })
            %>
        </ul>
    </script>

    <script>
        $(document)
            .ready(function () {
                $.getJSON("/api/notifications",
                    function (notifications) {
                        if (notifications.length == 0)
                            return;

                        $(".js-notifications-count")
                            .text(notifications.length)
                            .removeClass("hide")
                            .addClass("animated zoomInUp");

                        $(".notifications")
                            .popover({
                                html: true,
                                title: "Notifications",
                                content: function() {
                                    var compiled = _.template($("#notifications-template").html());
                                    return compiled({ notifications: notifications });
                                },
                                placement: "bottom"
                            })
                            .on("shown.bs.popover",
                                function () {
                                    $.post("/api/notifications/markAsRead")
                                        .done(function() {
                                            $(".js-notifications-count")
                                                .text("")
                                                .addClass("hide");
                                        });
                                    });

                    });
            });
    </script>


</body>


</html>
